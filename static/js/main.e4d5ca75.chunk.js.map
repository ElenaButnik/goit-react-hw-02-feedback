{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Notification","titleText","defaultProps","Statistics","good","neutral","bad","total","positivePercentage","className","s","list","item","message","FeedbackOptions","handleIncrementGood","handleIncrementNeutral","handleIncrementBad","button","type","onClick","Section","title","children","section","App","state","setState","prevState","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,iBCAzDD,EAAOC,QAAU,CAAC,OAAS,kC,iBCA3BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,0KCCtD,SAASC,EAAT,GAAsC,IAAdC,EAAa,EAAbA,UAC7B,OAAO,6BAAKA,IAGdD,EAAaE,aAAe,CAC1BD,UAAW,qB,oBCHN,SAASE,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACtD,OACE,gCACE,4CACCD,EACC,qBAAIE,UAAWC,IAAEC,KAAjB,UACE,qBAAIF,UAAWC,IAAEE,KAAjB,mBAA8BR,KAC9B,qBAAIK,UAAWC,IAAEE,KAAjB,sBAAiCP,KACjC,qBAAII,UAAWC,IAAEE,KAAjB,kBAA6BN,KAC7B,qBAAIG,UAAWC,IAAEE,KAAjB,oBAA+BL,KAC/B,qBAAIE,UAAWC,IAAEE,KAAjB,gCAA2CJ,EAA3C,UAGF,cAACR,EAAD,CAAca,QAAQ,yB,oBCdvB,SAASC,EAAT,GAIH,IAHFC,EAGC,EAHDA,oBACAC,EAEC,EAFDA,uBACAC,EACC,EADDA,mBAEA,OACE,gCACE,wBAASR,UAAWC,IAAEQ,OAAQC,KAAK,SAASC,QAASL,EAArD,kBAGA,wBAAQN,UAAWC,IAAEQ,OAAQC,KAAK,SAASC,QAASJ,EAApD,qBAGA,wBAAQP,UAAWC,IAAEQ,OAAQC,KAAK,SAASC,QAASH,EAApD,oB,oBCbC,SAASI,EAAT,GAAsC,EAAnBC,MAAoB,IAAbC,EAAY,EAAZA,SAC/B,OACE,0BAASd,UAAWC,IAAEc,QAAtB,UACE,oBAAIf,UAAWC,IAAEY,MAAjB,mCACCC,K,ICDDE,E,4MACJC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,oBAAsB,WAEpB,EAAKY,UAAS,SAACC,GACb,MAAO,CACLxB,KAAMwB,EAAUxB,KAAO,O,EAK7BY,uBAAyB,WAEvB,EAAKW,UAAS,SAACC,GACb,MAAO,CACLvB,QAASuB,EAAUvB,QAAU,O,EAKnCY,mBAAqB,WAEnB,EAAKU,UAAS,SAACC,GACb,MAAO,CACLtB,IAAKsB,EAAUtB,IAAM,O,4CAK3B,WACE,MAA+BuB,KAAKH,MAA5BtB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACfS,EACNc,KADMd,oBAAqBC,EAC3Ba,KAD2Bb,uBAAwBC,EACnDY,KADmDZ,mBAE/Ca,EAAqB1B,EAAOC,EAAUC,EACtCyB,EAAkCC,KAAKC,MAC1C7B,EAAO0B,EAAsB,KAIhC,OACE,eAACT,EAAD,CAASC,MAAM,wBAAf,UACE,cAACR,EAAD,CACEC,oBAAqBA,EACrBC,uBAAwBA,EACxBC,mBAAoBA,IAEtB,cAACd,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,EACPtB,mBAAoBuB,W,GAxDZG,aA8DHT,ICxDAU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e4d5ca75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3g7pU\",\"item\":\"Statistics_item__30IQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__23bTU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Mj7wn\",\"title\":\"Section_title__2AqJQ\"};","import PropTypes from \"prop-types\";\r\n\r\nexport function Notification({ titleText }) {\r\n  return <h3>{titleText}</h3>;\r\n}\r\n\r\nNotification.defaultProps = {\r\n  titleText: \"No feedback given\",\r\n};\r\n\r\nNotification.propTypes = {\r\n  titleText: PropTypes.string,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { Notification } from \"../Notification/Notification\";\r\nimport s from \"./Statistics.module.css\"\r\n\r\nexport function Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      {total ? (\r\n        <ul className={s.list}>\r\n          <li className={s.item}>Good: {good}</li>\r\n          <li className={s.item}>Neutral: {neutral}</li>\r\n          <li className={s.item}>Bad: {bad}</li>\r\n          <li className={s.item}>Total: {total}</li>\r\n          <li className={s.item}>Positive feedback: {positivePercentage}%</li>\r\n        </ul>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\"\r\n\r\nexport function FeedbackOptions({\r\n  handleIncrementGood,\r\n  handleIncrementNeutral,\r\n  handleIncrementBad,\r\n}) {\r\n  return (\r\n    <div>\r\n      <button  className={s.button} type=\"button\" onClick={handleIncrementGood}>\r\n        Good\r\n      </button>\r\n      <button className={s.button} type=\"button\" onClick={handleIncrementNeutral}>\r\n        Neutral\r\n      </button>\r\n      <button className={s.button} type=\"button\" onClick={handleIncrementBad}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  handleIncrementGood: PropTypes.func,\r\n  handleIncrementNeutral: PropTypes.func,\r\n  handleIncrementBad: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\"\r\n\r\nexport function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.title}>Please leave feedback</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { Statistics } from \"./components/Statistics/Statistics\";\nimport { FeedbackOptions } from \"./components/FeedbackOptions/FeedbackOptions\";\nimport { Section } from \"./components/Section/Section\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrementGood = () => {\n    //console.log('good +')\n    this.setState((prevState) => {\n      return {\n        good: prevState.good + 1,\n      };\n    });\n  };\n\n  handleIncrementNeutral = () => {\n    //console.log(\"neutral +\");\n    this.setState((prevState) => {\n      return {\n        neutral: prevState.neutral + 1,\n      };\n    });\n  };\n\n  handleIncrementBad = () => {\n    //console.log(\"bad +\");\n    this.setState((prevState) => {\n      return {\n        bad: prevState.bad + 1,\n      };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const { handleIncrementGood, handleIncrementNeutral, handleIncrementBad } =\n      this;\n    const countTotalFeedback = good + neutral + bad;\n    const countPositiveFeedbackPercentage = Math.round(\n      (good / countTotalFeedback) * 100\n    );\n    //console.log(countPositiveFeedbackPercentage)\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          handleIncrementGood={handleIncrementGood}\n          handleIncrementNeutral={handleIncrementNeutral}\n          handleIncrementBad={handleIncrementBad}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback}\n          positivePercentage={countPositiveFeedbackPercentage}\n        />\n      </Section>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}